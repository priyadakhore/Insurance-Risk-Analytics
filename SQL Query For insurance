#SQL query to achieve invoice in insurace dashboard

SELECT 
    achieved_totals.income_class,
    achieved_totals.achieved,
    COALESCE(invoice_totals.invoice_total, 0) AS invoice
FROM (SELECT 'Renewal' AS income_class,(SUM(b.amount) + SUM(f.amount)) AS achieved
        FROM brokerage b
    JOIN 
        fees f ON b.income_class = f.income_class
    WHERE b.income_class = 'Renewal'
    UNION ALL
    SELECT 
        'Cross Sell' AS income_class,
        (SUM(b.amount) + SUM(f.amount)) AS achieved
         FROM brokerage b
    JOIN 
        fees f ON b.income_class = f.income_class
    WHERE b.income_class = 'Cross Sell'
    UNION ALL
    SELECT 
        'New' AS income_class,
        (SUM(b.amount) + SUM(f.amount)) AS achieved
    FROM brokerage b
    JOIN 
        fees f ON b.income_class = f.income_class
    WHERE b.income_class = 'New') AS achieved_totals
LEFT JOIN (SELECT income_class,SUM(amount) AS invoice_total
    FROM invoice
    WHERE income_class IN ('Renewal', 'Cross Sell', 'New')
    GROUP BY income_class
) AS invoice_totals ON achieved_totals.income_class = invoice_totals.income_class;

create database insurance;
use insurance;

#Target
SELECT 
    'New' AS income_class,
    SUM(`New Budget`) AS target
FROM `individual budgets`
UNION ALL
SELECT 
    'Cross Sell' AS income_class,
    SUM(`cross sell budget`) AS target
FROM `individual budgets`
UNION ALL
SELECT 
    'Renewal' AS income_class,
    SUM(`renewal budget`) AS target
FROM `individual budgets`;


#No.of meetings by Account executive
SELECT `Account Executive` AS Account_Exe, count(meeting_date ) AS Total_Meetings
FROM Meeting
GROUP BY `Account Executive`;

#No.of invoice by Account Executive 
select `Account Executive`As Account_exe ,count(invoice_date) As no_of_invoices
from invoice
group by `Account Executive`;

#Stages wise by revenue amount
SELECT stage,
sum(revenue_amount)*100 AS rev_amount
FROM Opportunity
group by stage;

#top 10 products by revenue wise
SELECT product_group,
       SUM(revenue_amount) AS total_revenue
FROM Opportunity
GROUP BY product_group
ORDER BY total_revenue DESC
LIMIT 10;

#yearly meeting count;
SELECT YEAR(meeting_date) AS Year, COUNT(*) AS Total_Meetings
FROM Meeting
GROUP BY YEAR(meeting_date);

SELECT COUNT(*) FROM Meeting;
SELECT 
    COALESCE(invoice_totals.income_class, target_totals.income_class) AS income_class,
    CASE 
        WHEN COALESCE(target_totals.target, 0) = 0 THEN '0%'
        ELSE CONCAT(FORMAT((COALESCE(invoice_totals.invoice, 0) / COALESCE(target_totals.target, 0)) * 100, 2), '%')
    END AS invoice_achievement_percentage
FROM (
    -- Invoice Subquery
    SELECT 
        income_class,
        SUM(amount) AS invoice
    FROM 
        invoice
    WHERE 
        income_class IN ('New', 'Cross Sell', 'Renewal')
    GROUP BY 
        income_class
) AS invoice_totals

LEFT JOIN (
    -- Target Subquery
    SELECT 
        'New' AS income_class,
        SUM(`New Budget`) AS target
    FROM 
        `individual budgets`
    
    UNION ALL

    SELECT 
        'Cross Sell' AS income_class,
        SUM(`cross sell budget`) AS target
    FROM 
        `individual budgets`

    UNION ALL

    SELECT 
        'Renewal' AS income_class,
        SUM(`renewal budget`) AS target
    FROM 
        `individual budgets`
) AS target_totals ON invoice_totals.income_class = target_totals.income_class;

